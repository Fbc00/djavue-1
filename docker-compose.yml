version: "3.9"

services:
  database:
    image: postgres:14.5-alpine
    ports:
      - 5432:5432
    env_file:
      - .env
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -d $POSTGRES_DB -U $POSTGRES_USER"
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - data:/var/lib/postgresql/data
    restart: on-failure

  back:
    build:
      context: .
      dockerfile: dockerfile
    image: djavue-back:dev
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - 8000:8000
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - .:/back
    restart: on-failure

  front:
    build:
      context: front/
      dockerfile: dockerfile
    image: djavue-front:dev
    command: npm run dev:disable-mock
    ports:
      - 3000:3000
    depends_on:
      - back
    volumes:
      - node_modules:/front/node_modules

volumes:
  data:
  node_modules:
