version: "3.9"

services:
  postgres:
    image: postgres:14.5-alpine
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: on-failure

  django:
    build:
      context: .
      dockerfile: dockerfile
    image: djavue-backend:dev
    command: sh -c "python manage.py migrate && python manage.py runserver"
    ports:
      - 8000:8000
    environment:
      DJANGO_DB_NAME: postgres
      DJANGO_DB_USER: postgres
      DJANGO_DB_PASSWORD: postgres
      DJANGO_DB_HOST: postgres
      DJANGO_DB_PORT: 5432
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/backend
    restart: on-failure

  nuxt:
    build:
      context: frontend/
      dockerfile: dockerfile
    image: djavue-frontend:dev
    command: npm run dev:disable-mock
    ports:
      - 3000:3000
    depends_on:
      django:
        condition: service_started
    volumes:
      - node_modules:/frontend/node_modules

  nginx:
    image: nginx:stable
    network_mode: host
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      django:
        condition: service_started
      nuxt:
        condition: service_started

volumes:
  postgres_data:
  node_modules:
